{
  "name": "geom-mat",
  "version": "0.1.1",
  "description": "A collection of terse, efficient affine matrix tools.",
  "main": "index.js",
  "scripts": {
    "test": "make test"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/publicclass/geom-mat"
  },
  "keywords": [
    "geometry"
  ],
  "author": {
    "name": "Robert Sk√∂ld",
    "email": "robert@publicclass"
  },
  "license": "BSD",
  "devDependencies": {
    "should": "~1.2.1",
    "mocha": "~1.7.1"
  },
  "testling": {
    "files": "test.js",
    "harness": "mocha",
    "browsers": [
      "ie6",
      "ie7",
      "ie8",
      "ie9",
      "firefox/15",
      "chrome/22",
      "opera/12",
      "safari/5.1"
    ]
  },
  "readme": "\n# geom-mat\n\n[![Build Status](https://travis-ci.org/publicclass/geom-mat.png)](https://travis-ci.org/publicclass/geom-mat)\n\nA collection of terse matrix utilities. A part of [geom](https://github.com/publicclass/geom).\n\n\n## Features\n\n  * __Memory managed__ each utility has a pool of instances accessable using `_X_.make()` and `_X_.free()`. If you don't need pooled instances, simply pass in your own object instead.\n\n  * __State less__ no state is kept within the utilities, it's up to you.\n\n\n## Example\n\n## API\n\n### mat.make([a,b,c,d,x,y])\n### mat.free(m)\n### mat.copy(a[,m])\n### mat.ident([m])\n### mat.mul(a,b[,m])\n### mat.inv(a[,m])\n### mat.translate(x,y[,m])\n### mat.scale(x,y[,m])\n### mat.rotate(theta[,m])\n\n## License\n\n  MIT",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/publicclass/geom-mat/issues"
  },
  "_id": "geom-mat@0.1.1",
  "_from": "geom-mat@*"
}
